// ninja.less
// Git: https://github.com/sandeepjain/less-ninja
// This is the collection of reusable less based snippet to help you write faster css.
// -----------------------------------------------------------------

// UTILITY MIXINS
// --------------------------------------------------

// Clearfix
// -------------------------
// For clearing floats like a boss h5bp.com/q
.clearfix() {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
  }
  &:after {
    clear: both;
  }
}

// Center-align a block level element
// -------------------------
.center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Webkit-style focus
// ------------------
.tab-focus() {
  // Default
  outline: thin dotted #333;
  // Webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// IE7 inline-block
// -------------------------
.ie7-inline-block() {
  *display: inline; /* IE7 inline-block hack */
  *zoom: 1;
}

// IE7 likes to collapse whitespace on either side of the inline-block elements.
// Ems because we're attempting to match the width of a space character. Left
// version is for form buttons, which typically come after other elements, and
// right version is for icons, which come before. Applying both is ok, but it will
// mean that space between those elements will be .6em (~2 space characters) in IE7,
// instead of the 1 space in other browsers.
.ie7-restore-left-whitespace() {
  *margin-left: .3em;

  &:first-child {
    *margin-left: 0;
  }
}

.ie7-restore-right-whitespace() {
  *margin-right: .3em;
}

// Sizing shortcuts
// -------------------------
.size(@height: 5px, @width: 5px) {
  width: @width;
  height: @height;
}

// Alternate to size 
// this mixin puts width as first parameter 
// I think this makes as most of the dimesion we see are W x H
.dimension(@width: 5px, @height: 5px) {
  width: @width;
  height: @height;

}

.square(@size: 5px) {
  .dimension(@size, @size);
}

.rounded-square(@size, @radius: 5px) {
 .size(@size, @size);
 .border-radius(@radius);
}

// Placeholder text
// -------------------------
.placeholder(@color: @placeholderText) {
  :-moz-placeholder {
    color: @color;
  }
  ::-webkit-input-placeholder {
    color: @color;
  }
}

// Text overflow
// -------------------------
// Requires inline-block or block for proper styling
.text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// CSS image replacement
// -------------------------
// Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757
.hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

// Optional hyphenation
.hyphens(@mode: auto) {
  word-wrap: break-word;
  -webkit-hyphens: @mode;
     -moz-hyphens: @mode;
      -ms-hyphens: @mode;
       -o-hyphens: @mode;
          hyphens: @mode;
}

// Resize anything
.resizable(@direction) {
  resize: @direction; // Options: horizontal, vertical, both
  overflow: auto; // Safari fix
}

// FONTS
// --------------------------------------------------

#font {
  #family {
    .serif() {
      font-family: Georgia, "Times New Roman", Times, serif;
    }
    .sans-serif() {
      font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    }
    .verdana() {
        font-family: verdana, sans-serif;
    }
    .helvetica() {
      font-family: Helvetica, Arial, sans-serif;
    }
    .monospace() {
      font-family: Menlo, Monaco, "Courier New", monospace;
    }
  }
  .shorthand(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    font-size: @size;
    font-weight: @weight;
    line-height: @lineHeight;
  }
  .serif(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .serif;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
  .sans-serif(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .sans-serif;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
  .monospace(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .monospace;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
  .typewriter(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .typewriter;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
  .verdana(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .verdana;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
}



// GRID SYSTEM
// --------------------------------------------------

// Site container
// -------------------------
.fixed-container() {
  width: @siteWidth;
  margin-left: auto;
  margin-right: auto;
  .clearfix();
}

// Columns and offseting
// -------------------------
.columns(@columns: 1) {
  width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));
}
.offset(@columns: 1) {
  margin-left: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1)) + (@gridGutterWidth * 2);
}
// Necessary grid styles for every column to make them appear next to each other horizontally
.gridColumn() {
  float: left;
  margin-left: @gridGutterWidth;
}
// makeColumn can be used to mark any element (e.g., .content-primary) as a column without changing markup to .span something
.makeColumn(@columnSpan: 1) {
  .gridColumn();
  .columns(@columnSpan);
}
// CSS3 PROPERTIES
// --------------------------------------------------

// Border Radius
.border-radius(@radius: 5px) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}
.border-radius-custom(@topLeft: 0, @topRight: 0, @bottomRight: 0, @bottomLeft: 0) {
  -webkit-border-top-left-radius: @topLeft;
      -moz-border-radius-topleft: @topLeft;
          border-top-left-radius: @topLeft;
  -webkit-border-top-right-radius: @topRight;
      -moz-border-radius-topright: @topRight;
          border-top-right-radius: @topRight;
  -webkit-border-bottom-right-radius: @bottomRight;
      -moz-border-radius-bottomright: @bottomRight;
          border-bottom-right-radius: @bottomRight;
  -webkit-border-bottom-left-radius: @bottomLeft;
      -moz-border-radius-bottomleft: @bottomLeft;
          border-bottom-left-radius: @bottomLeft;
  -webkit-background-clip: padding-box;
     -moz-background-clip: padding;
          background-clip: padding-box;
}

// Drop shadows
.box-shadow(@shadow: 0 1px 3px rgba(0,0,0,.25)) {
  -webkit-box-shadow: @shadow;
     -moz-box-shadow: @shadow;
          box-shadow: @shadow;
}

// Transitions
.transition(@transition) {
  -webkit-transition: @transition;
     -moz-transition: @transition;
       -o-transition: @transition;
          transition: @transition;
}

// Transformations

.transform(@value) {
  -webkit-transform: @value;
     -moz-transform: @value;
       -o-transform: @value;
          transform: @value;
}

.animation-name(@value) {
    -webkit-animation-name: @value;
       -moz-animation-name: @value;
         -o-animation-name: @value;
            animation-name: @value;
}

.animation-duration(@value) {
    -webkit-animation-duration: @value;
       -moz-animation-duration: @value;
         -o-animation-duration: @value;
            animation-duration: @value;
}

.animation-timing-function(@value) {
    -webkit-animation-timing-function: @value;
       -moz-animation-timing-function: @value;
         -o-animation-timing-function: @value;
            animation-timing-function: @value;
}

.rotate(@degrees: 5deg) {
  -webkit-transform: rotate(@degrees);
     -moz-transform: rotate(@degrees);
       -o-transform: rotate(@degrees);
          transform: rotate(@degrees);
}

.rotateY(@degrees: 5deg) {
  -webkit-transform: rotateY(@degrees);
     -moz-transform: rotateY(@degrees);
       -o-transform: rotateY(@degrees);
          transform: rotateY(@degrees);
}

.transform-style(@style: preserve-3d) {
    -webkit-transform-style: @style;
       -moz-transform-style: @style;
         -o-transform-style: @style;
            transform-style: @style;
}

.backface-visibility(@value: hidden) {
    -webkit-backface-visibility: @value;
       -moz-backface-visibility: @value;
         -o-backface-visibility: @value;
            backface-visibility: @value;
}


.scale(@value: 1.5) {
  -webkit-transform: scale(@value);
     -moz-transform: scale(@value);
       -o-transform: scale(@value);
          transform: scale(@value);
}
.translate(@x: 0, @y: 0) {
  -webkit-transform: translate(@x, @y);
     -moz-transform: translate(@x, @y);
       -o-transform: translate(@x, @y);
          transform: translate(@x, @y);
}

.perspective(@value: 600px) {
    -webkit-perspective: @value;
       -moz-perspective: @value;
         -o-perspective: @value;
            perspective: @value;
}

// Background clipping
// Heads up: FF 3.6 and under need padding instead of padding-box
.background-clip(@clip) {
  -webkit-background-clip: @clip;
     -moz-background-clip: @clip;
          background-clip: @clip;
}

// Background sizing
.background-size(@size){
  -webkit-background-size: @size;
     -moz-background-size: @size;
       -o-background-size: @size;
          background-size: @size;
}


// Box sizing
.box-sizing(@boxmodel) {
  -webkit-box-sizing: @boxmodel;
     -moz-box-sizing: @boxmodel;
          box-sizing: @boxmodel;
}

// User select
// For selecting text on the page
.user-select(@select) {
  -webkit-user-select: @select;
     -moz-user-select: @select;
       -o-user-select: @select;
          user-select: @select;
}

// Resize anything
.resizable(@direction: both) {
  resize: @direction; // Options: horizontal, vertical, both
  overflow: auto; // Safari fix
}

// CSS3 Content Columns
.content-columns(@columnCount, @columnGap: 20px) {
  -webkit-column-count: @columnCount;
     -moz-column-count: @columnCount;
          column-count: @columnCount;
  -webkit-column-gap: @columnGap;
     -moz-column-gap: @columnGap;
          column-gap: @columnGap;
}

// Opacity
.opacity(@opacity: 100) {
  filter: e(%("alpha(opacity=%d)", @opacity));
    -moz-opacity: @opacity / 100;
         opacity: @opacity / 100;
}
.non-ie-opacity(@opacity: 100) {
    /*-moz-opacity: @opacity / 100;*/
         opacity: @opacity / 100;
}



// BACKGROUNDS
// --------------------------------------------------

// Add an alphatransparency value to any background or border color (via Elyse Holladay)
#translucent {
  .background(@color: @white, @alpha: 1) {
    background-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
  }
  .border(@color: @white, @alpha: 1) {
    border-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
    -webkit-background-clip: padding-box;
       -moz-background-clip: padding;
            background-clip: padding-box;
  }
}

// Gradient Bar Colors for buttons and alerts
.gradientBar(@primaryColor, @secondaryColor) {
  #gradient > .vertical(@primaryColor, @secondaryColor);
  border-color: @secondaryColor @secondaryColor darken(@secondaryColor, 15%);
  border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 15%);
}

// Gradients
#gradient {
  .horizontal(@startColor: #555, @endColor: #333) {
    background-color: @endColor;
    background-image: -khtml-gradient(linear, left top, right top, from(@startColor), to(@endColor)); // Konqueror
    background-image: -moz-linear-gradient(left, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, left top, right top, color-stop(0%, @startColor), color-stop(100%, @endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(left, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(left, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(left, @startColor, @endColor); // Le standard
    background-repeat: repeat-x;
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",@startColor,@endColor)); // IE9 and down
  }
  .vertical(@startColor: #555, @endColor: #333) {
    background-color: @endColor;
    background-image: -khtml-gradient(linear, left top, left bottom, from(@startColor), to(@endColor)); // Konqueror
    background-image: -moz-linear-gradient(top, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, @startColor), color-stop(100%, @endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(top, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(top, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(top, @startColor, @endColor); // The standard
    background-repeat: repeat-x;
   filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@startColor,@endColor)); // IE9 and down
  }
  .directional(@startColor: #555, @endColor: #333, @deg: 45deg) {
    background-color: @endColor;
    background-repeat: repeat-x;
    background-image: -moz-linear-gradient(@deg, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-linear-gradient(@deg, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(@deg, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(@deg, @startColor, @endColor); // The standard
  }
  .vertical-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
    background-color: @endColor;
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
    background-image: -webkit-linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-image: -moz-linear-gradient(top, @startColor, @midColor @colorStop, @endColor);
    background-image: -o-linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-repeat: no-repeat;
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@startColor,@endColor)); // IE9 and down, gets no color-stop at all for proper fallback
  }
  .radial(@centerColor: #555, @outsideColor: #333)  {
    background-color: @outsideColor;
    background-image: -webkit-gradient(radial, center center, 0, center center, 460, from(@centerColor), to(@outsideColor));
    background-image: -webkit-radial-gradient(circle, @centerColor, @outsideColor);
    background-image: -moz-radial-gradient(circle, @centerColor, @outsideColor);
    background-repeat: no-repeat;
    // Opera cannot do radial gradients yet
  }
  .vertical-four-colors(@color1, @color2, @position2, @color3, @position3, @color4){
    background: (@color1 + @color4) / 2; // Non CSS3 browsers get the average color
    background-image: -moz-linear-gradient(top,  @color1, @color2 @position2 * 1%, @color3 @position3 * 1%, @color4); // FF 3.6
    background-image: -webkit-gradient(linear, left top, left bottom, from(@color1), color-stop(@position2 / 100, @color2), color-stop(@position3 / 100, @color3), to(@color4)); // Safari 4+, Chrome
    background-image: -webkit-linear-gradient(top, from(@color1), color-stop(@position2 / 100, @color2), color-stop(@position3 / 100, @color3), to(@color4)); // Chrome 10+, Safari 5.1+
    background-image: -o-linear-gradient(top, @color1 0%, @color2 @position2 * 1%, @color3 @position3 * 1%, @color4 100%); // Opera 11.10+
    filter: %("progid:DXImageTransform.Microsoft.gradient(startColorstr=%d, endColorstr=%d)", @color1, @color4); // IE6 & 7
    -ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorstr=%d, endColorstr=%d)", @color1, @color4); // IE8
    background-image: linear-gradient(top, @color1 0%, @color2 @position2 * 1%, @color3 @position3 * 1%, @color4 100%); // CSS3
}
  .striped(@color,@angle: -45deg) {
    background-color: @color;
    background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,.15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,.15)), color-stop(.75, rgba(255,255,255,.15)), color-stop(.75, transparent), to(transparent));
    background-image: -webkit-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -moz-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -o-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
  }
}

// Reset filters for IE
.reset-filter() {
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(enabled = false)"));
}



// COMPONENT MIXINS
// --------------------------------------------------

// POPOVER ARROWS
// -------------------------
// For tipsies and popovers
#popoverArrow {
  .top(@arrowWidth: 5px) {
    bottom: 0;
    left: 50%;
    margin-left: -@arrowWidth;
    border-left: @arrowWidth solid transparent;
    border-right: @arrowWidth solid transparent;
    border-top: @arrowWidth solid @black;
  }
  .left(@arrowWidth: 5px) {
    top: 50%;
    right: 0;
    margin-top: -@arrowWidth;
    border-top: @arrowWidth solid transparent;
    border-bottom: @arrowWidth solid transparent;
    border-left: @arrowWidth solid @black;
  }
  .bottom(@arrowWidth: 5px) {
    top: 0;
    left: 50%;
    margin-left: -@arrowWidth;
    border-left: @arrowWidth solid transparent;
    border-right: @arrowWidth solid transparent;
    border-bottom: @arrowWidth solid @black;
  }
  .right(@arrowWidth: 5px) {
    top: 50%;
    left: 0;
    margin-top: -@arrowWidth;
    border-top: @arrowWidth solid transparent;
    border-bottom: @arrowWidth solid transparent;
    border-right: @arrowWidth solid @black;
  }
}



// Flip an element
// Can be used to flip images as well
// -------------------------
.flipHorizontal() {
    -webkit-transform: scaleX(-1);
       -moz-transform: scaleX(-1);
         -o-transform: scaleX(-1);
            transform: scaleX(-1);
               filter: FlipH;
}

.flipVertical() {
    -webkit-transform: matrix(1, 0, 0, -1, 0, 0);
       -moz-transform: matrix(1, 0, 0, -1, 0, 0);
         -o-transform: matrix(1, 0, 0, -1, 0, 0);
            transform: matrix(1, 0, 0, -1, 0, 0);
               filter: FlipV;
}

// Horizontal, Vertical center absolute positioned element
// -------------------------
.css-popup(@height, @width, @vPadding, @hPadding, @border: 0px) {
    position: absolute;
    left: 50%;
    top: 50%;

    .size(@height - @vPadding * 2, @width - @hPadding * 2);
    padding: @vPadding @hPadding;
    margin: -(@height/2 + @border) 0 0 -(@width/2 + @border);
}


// Photoshop drop shadow spread
// -------------------------
.drop-shadow-with-spread(@x-axis: 0, @y-axis: 1px, @blur: 2px, @spread: 0, @color) {
    -webkit-box-shadow: @x-axis @y-axis @blur @spread @color;
    -moz-box-shadow: @x-axis @y-axis @blur @spread @color;
    box-shadow: @x-axis @y-axis @blur @spread @color;
}

// Photoshop drop shadow
// -------------------------
.ps-drop-shadow (@color: #fff, @angle: 0, @distance: 0, @spread: 0, @size: 0) {
    @radians: ~`(180 - @{angle}) * Math.PI / 180`;
    @h-shadow: ~`Math.round( Math.cos( @{radians} ) * @{distance} ) + 'px'`; 
    @v-shadow: ~`Math.round( Math.sin( @{radians} ) * @{distance} ) + 'px'`; 
    @spread_tmp: @size * @spread / 100;
    @css-spread: ~`Math.round( @{spread_tmp} ) + 'px'`;
    @blur: ~`Math.round( (@{size} - @{spread_tmp}) ) + 'px'`;

    .drop-shadow-with-spread(@h-shadow, @v-shadow, @blur, @css-spread, @color);
}

// Text Emboss
// refer http://blainsmith.tumblr.com/post/437095195/embossed-text-with-css3

.text-emboss-light-bg () {
    text-shadow: 0px 1px 0px #ffffff;
}

.text-emboss-dark-bg () {
    text-shadow: 0px -1px 0px #374683;
}
